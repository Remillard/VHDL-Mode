[
	// Method to the Madness
	// Using Alt-K as an extended command initiator.  After that,
	// using vhdl-mode similar (though not exact) patterns
	// 'p' starts port commands for copy and pasting.
	{"keys": ["alt+k", "p", "w"], "command": "vhdl_mode_copy_ports"},
	{"keys": ["alt+k", "p", "s"], "command": "vhdl_mode_paste_as_signal"},
	{"keys": ["alt+k", "p", "c"], "command": "vhdl_mode_paste_as_component"},
	{"keys": ["alt+k", "p", "e"], "command": "vhdl_mode_paste_as_entity"},
	{"keys": ["alt+k", "p", "i"], "command": "vhdl_mode_paste_as_instance"},
	{"keys": ["alt+k", "p", "t"], "command": "vhdl_mode_paste_as_testbench"},
	// 's' starts subprogram commands for copy and pasting.
	{"keys": ["alt+k", "s", "w"], "command": "vhdl_mode_copy_subprogram"},
	{"keys": ["alt+k", "s", "d"], "command": "vhdl_mode_paste_as_declaration"},
	{"keys": ["alt+k", "s", "b"], "command": "vhdl_mode_paste_as_body"},
	{"keys": ["alt+k", "s", "c"], "command": "vhdl_mode_paste_as_call"},


	// Toggle comment command.  'c' starts code commands.
	{"keys": ["alt+k", "c", "c"], "command": "vhdl_mode_toggle_comment_region"},
	{"keys": ["alt+k", "c", "b"], "command": "vhdl_mode_beautify_buffer"},

	// 't' starts template commands
	{"keys": ["alt+k", "t", "h"], "command": "vhdl_mode_insert_header"},

	// Stutter typing keybinds.
	{
		"keys": [".", "."],
		"command": "insert",
		"args": {"characters": " => "},
		"context": [{"key": "selector", "operand": "source.vhdl"}]
	},
	{
		"keys": [",", ","],
		"command": "insert",
		"args": {"characters": " <= "},
		"context": [{"key": "selector", "operand": "source.vhdl"}]
	},
	{
		"keys": [";", ";"],
		"command": "insert",
		"args": {"characters": " : "},
		"context": [{"key": "selector", "operand": "source.vhdl"}]
	},
	{
		"keys": [";"],
		"command": "run_macro_file",
		"args": {"file": "res://Packages/VHDL Mode/Macros/semicolon.sublime-macro"},
		"context": [
			{"key": "selector", "operand": "source.vhdl"},
			{"key": "preceding_text", "operator": "regex_contains", "operand": " : $", "match_all": true}
		]
	},
	{
		"keys": ["-", "-", "-"],
		"command": "vhdl_mode_insert_comment_line",
		"context": [{"key": "selector", "operand": "source.vhdl"}]
	},
	{
		"keys": ["-", "-", "="],
		"command": "vhdl_mode_insert_comment_box",
		"context": [{"key": "selector", "operand": "source.vhdl"}]
	},


	// Version Command
	{"keys": ["alt+k", "S"], "command": "vhdl_mode_scope_sniffer"},
	{"keys": ["alt+k", "v"], "command": "vhdl_mode_version"}
]
